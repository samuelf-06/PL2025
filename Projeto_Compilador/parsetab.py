
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programaleftORleftANDnonassocEQNEQLTLEGTGEleft+-left*/DIVMODnonassocLOWER_THAN_ELSEnonassocELSEAND ARRAY ASSIGN BEGIN DIV DO DOTDOT DOWNTO ELSE END EQ FALSE FOR FUNCTION GE GT ID IF LE LT MOD NEQ NOT NUMBER OF OR PROCEDURE PROGRAM READLN STRING THEN TIPOSTRING TIPOVAR TO TRUE VAR WHILE WRITELNprograma : PROGRAM ID ";" declaracoes bloco_simples "."comando_composto : BEGIN comandos ENDcomandos : comandos comando_semi\n| comando_semicomando_semi : comando ";"\n| comandobloco_simples : BEGIN comandos END\n| BEGIN declaracoes_variaveis comandos ENDdeclaracoes : declaracoes_variaveis declaracoes_subprogramas declaracoes_variaveis_opt\n| declaracoes_subprogramas declaracoes_variaveis_opt\n| declaracoes_variaveis declaracoes_subprogramas\n| declaracoes_variaveis\n| declaracoes_subprogramas\n| emptydeclaracoes_variaveis_opt : declaracoes_variaveis\n| emptydeclaracoes_variaveis : VAR lista_decllista_decl : lista_decl decl\n| decldecl : lista_ids ":" tipo ";"tipo : TIPOVAR\n| TIPOSTRING\n| ARRAY \'[\' NUMBER DOTDOT NUMBER \']\' OF TIPOVARlista_ids : identificador\n| lista_ids \',\' identificadoridentificador : ID\n| ID "[" expressao "]"declaracoes_subprogramas : lista_subprogramaslista_subprogramas : lista_subprogramas subprograma\n| subprogramasubprograma : funcao\n| procedimentofuncao_header : FUNCTION ID \'(\' parametros \')\' \':\' TIPOVAR \';\' funcao : funcao_header bloco_simplesprocedimento : PROCEDURE ID "(" parametros ")" ";" declaracoes_variaveis_opt bloco_simples ";"atribuicao : ID ASSIGN expressaoparametros : lista_param\n| emptylista_param : lista_param ";" param\n| paramparam : lista_ids ":" tipocomando : atribuicao\n| comando_if\n| comando_for\n| comando_while\n| comando_composto\n| comando_write\n| comando_read\n| chamada_funcaocomando_write : WRITELN "(" lista_exp ")"comando_read : READLN "(" lista_ids ")"comando_if : IF expressao THEN comando ELSE comando\n| IF expressao THEN comando %prec LOWER_THAN_ELSEcomando_for : FOR ID ASSIGN expressao TO expressao DO comando\n| FOR ID ASSIGN expressao DOWNTO expressao DO comandocomando_while : WHILE expressao DO comandolista_exp : expressao\n| lista_exp \',\' expressaoargumentos : lista_exp\n| emptyexpressao : expressao OR expressao1\n| expressao1expressao1 : expressao1 AND expressao2\n| expressao2expressao2 : ID \'[\' expressao \']\' expressao2 : expressao3 relop expressao3\n| expressao3relop : EQ\n| NEQ\n| LT\n| LE\n| GT\n| GEexpressao3 : expressao3 addop termo\n| termoaddop : \'+\'\n| \'-\' termo : termo mulop fator\n| fatormulop : \'*\'\n| \'/\'\n| DIV\n| MODfator : NUMBER\n| STRING\n| TRUE\n| FALSE\n| ID\n| ID "[" expressao "]"\n| "(" expressao ")"\n| chamada_funcaochamada_funcao : ID "(" argumentos ")"empty :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,32,],[0,-1,]),'ID':([2,9,15,16,18,23,24,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,53,55,56,57,58,59,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,81,82,95,97,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,122,123,126,130,133,134,135,136,137,139,140,141,142,143,145,146,147,154,155,156,157,158,162,169,170,171,174,175,],[3,27,30,31,46,27,-19,46,46,46,-4,-6,-42,-43,-44,-45,-46,-47,-48,-49,69,79,69,-18,27,69,27,27,46,-3,46,-5,69,69,-62,-64,-88,-67,-75,-79,-84,-85,-86,-87,69,-91,69,27,-2,-36,46,69,69,69,140,140,-68,-69,-70,-71,-72,-73,-76,-77,140,-80,-81,-82,-83,69,46,-20,27,-92,69,-53,-61,-63,-66,-88,-74,-78,-90,-56,-50,-51,46,-65,69,69,69,-52,-89,46,46,-54,-55,]),';':([3,37,38,39,40,41,42,43,44,45,60,67,68,69,70,71,72,73,74,75,76,78,83,84,85,90,92,95,96,97,129,133,135,136,137,139,140,141,142,143,145,146,147,150,151,155,161,162,167,169,174,175,177,],[4,63,-42,-43,-44,-45,-46,-47,-48,-49,-7,-62,-64,-88,-67,-75,-79,-84,-85,-86,-87,-91,126,-21,-22,130,-40,-2,-8,-36,149,-92,-53,-61,-63,-66,-88,-74,-78,-90,-56,-50,-51,-39,-41,-65,168,-52,173,-89,-54,-55,-23,]),'VAR':([4,7,10,11,12,13,18,19,28,29,60,96,149,173,],[9,9,-28,-30,-31,-32,9,9,-29,-34,-7,-8,9,-35,]),'BEGIN':([4,5,6,7,8,10,11,12,13,14,18,19,20,21,22,23,24,28,29,33,34,35,36,37,38,39,40,41,42,43,44,45,52,53,59,60,61,62,63,67,68,69,70,71,72,73,74,75,76,78,95,96,97,102,123,126,133,135,136,137,139,140,141,142,143,145,146,147,149,154,155,160,162,168,169,170,171,173,174,175,],[-93,18,-12,-13,-14,-28,-30,-31,-32,18,33,-11,-10,-15,-16,-17,-19,-29,-34,33,33,33,-4,-6,-42,-43,-44,-45,-46,-47,-48,-49,-9,-18,33,-7,-3,33,-5,-62,-64,-88,-67,-75,-79,-84,-85,-86,-87,-91,-2,-8,-36,33,33,-20,-92,-53,-61,-63,-66,-88,-74,-78,-90,-56,-50,-51,-93,33,-65,18,-52,-33,-89,33,33,-35,-54,-55,]),'PROCEDURE':([4,6,10,11,12,13,23,24,28,29,53,60,96,126,173,],[15,15,15,-30,-31,-32,-17,-19,-29,-34,-18,-7,-8,-20,-35,]),'FUNCTION':([4,6,10,11,12,13,23,24,28,29,53,60,96,126,173,],[16,16,16,-30,-31,-32,-17,-19,-29,-34,-18,-7,-8,-20,-35,]),'.':([17,60,96,],[32,-7,-8,]),'IF':([18,23,24,33,34,35,36,37,38,39,40,41,42,43,44,45,53,59,61,62,63,67,68,69,70,71,72,73,74,75,76,78,95,97,102,123,126,133,135,136,137,139,140,141,142,143,145,146,147,154,155,162,169,170,171,174,175,],[47,-17,-19,47,47,47,-4,-6,-42,-43,-44,-45,-46,-47,-48,-49,-18,47,-3,47,-5,-62,-64,-88,-67,-75,-79,-84,-85,-86,-87,-91,-2,-36,47,47,-20,-92,-53,-61,-63,-66,-88,-74,-78,-90,-56,-50,-51,47,-65,-52,-89,47,47,-54,-55,]),'FOR':([18,23,24,33,34,35,36,37,38,39,40,41,42,43,44,45,53,59,61,62,63,67,68,69,70,71,72,73,74,75,76,78,95,97,102,123,126,133,135,136,137,139,140,141,142,143,145,146,147,154,155,162,169,170,171,174,175,],[48,-17,-19,48,48,48,-4,-6,-42,-43,-44,-45,-46,-47,-48,-49,-18,48,-3,48,-5,-62,-64,-88,-67,-75,-79,-84,-85,-86,-87,-91,-2,-36,48,48,-20,-92,-53,-61,-63,-66,-88,-74,-78,-90,-56,-50,-51,48,-65,-52,-89,48,48,-54,-55,]),'WHILE':([18,23,24,33,34,35,36,37,38,39,40,41,42,43,44,45,53,59,61,62,63,67,68,69,70,71,72,73,74,75,76,78,95,97,102,123,126,133,135,136,137,139,140,141,142,143,145,146,147,154,155,162,169,170,171,174,175,],[49,-17,-19,49,49,49,-4,-6,-42,-43,-44,-45,-46,-47,-48,-49,-18,49,-3,49,-5,-62,-64,-88,-67,-75,-79,-84,-85,-86,-87,-91,-2,-36,49,49,-20,-92,-53,-61,-63,-66,-88,-74,-78,-90,-56,-50,-51,49,-65,-52,-89,49,49,-54,-55,]),'WRITELN':([18,23,24,33,34,35,36,37,38,39,40,41,42,43,44,45,53,59,61,62,63,67,68,69,70,71,72,73,74,75,76,78,95,97,102,123,126,133,135,136,137,139,140,141,142,143,145,146,147,154,155,162,169,170,171,174,175,],[50,-17,-19,50,50,50,-4,-6,-42,-43,-44,-45,-46,-47,-48,-49,-18,50,-3,50,-5,-62,-64,-88,-67,-75,-79,-84,-85,-86,-87,-91,-2,-36,50,50,-20,-92,-53,-61,-63,-66,-88,-74,-78,-90,-56,-50,-51,50,-65,-52,-89,50,50,-54,-55,]),'READLN':([18,23,24,33,34,35,36,37,38,39,40,41,42,43,44,45,53,59,61,62,63,67,68,69,70,71,72,73,74,75,76,78,95,97,102,123,126,133,135,136,137,139,140,141,142,143,145,146,147,154,155,162,169,170,171,174,175,],[51,-17,-19,51,51,51,-4,-6,-42,-43,-44,-45,-46,-47,-48,-49,-18,51,-3,51,-5,-62,-64,-88,-67,-75,-79,-84,-85,-86,-87,-91,-2,-36,51,51,-20,-92,-53,-61,-63,-66,-88,-74,-78,-90,-56,-50,-51,51,-65,-52,-89,51,51,-54,-55,]),':':([25,26,27,87,93,128,132,],[54,-24,-26,-25,131,-27,152,]),',':([25,26,27,67,68,69,70,71,72,73,74,75,76,78,87,93,99,101,124,125,128,133,136,137,139,140,141,142,143,153,155,169,],[55,-24,-26,-62,-64,-88,-67,-75,-79,-84,-85,-86,-87,-91,-25,55,134,-57,134,55,-27,-92,-61,-63,-66,-88,-74,-78,-90,-58,-65,-89,]),')':([26,27,57,58,65,67,68,69,70,71,72,73,74,75,76,78,84,85,87,89,90,91,92,94,98,99,100,101,121,124,125,128,133,136,137,139,140,141,142,143,150,151,153,155,169,177,],[-24,-26,-93,-93,-93,-62,-64,-88,-67,-75,-79,-84,-85,-86,-87,-91,-21,-22,-25,129,-37,-38,-40,132,133,-59,-60,-57,143,146,147,-27,-92,-61,-63,-66,-88,-74,-78,-90,-39,-41,-58,-65,-89,-23,]),'[':([27,69,86,140,],[56,105,127,156,]),'(':([30,31,46,47,49,50,51,56,64,65,69,77,81,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,122,134,140,156,157,158,],[57,58,65,77,77,81,82,77,77,77,65,77,77,77,77,77,77,77,-68,-69,-70,-71,-72,-73,-76,-77,77,-80,-81,-82,-83,77,77,65,77,77,77,]),'END':([34,36,37,38,39,40,41,42,43,44,45,59,61,62,63,67,68,69,70,71,72,73,74,75,76,78,95,97,133,135,136,137,139,140,141,142,143,145,146,147,155,162,169,174,175,],[60,-4,-6,-42,-43,-44,-45,-46,-47,-48,-49,95,-3,96,-5,-62,-64,-88,-67,-75,-79,-84,-85,-86,-87,-91,-2,-36,-92,-53,-61,-63,-66,-88,-74,-78,-90,-56,-50,-51,-65,-52,-89,-54,-55,]),'ELSE':([38,39,40,41,42,43,44,45,67,68,69,70,71,72,73,74,75,76,78,95,97,133,135,136,137,139,140,141,142,143,145,146,147,155,162,169,174,175,],[-42,-43,-44,-45,-46,-47,-48,-49,-62,-64,-88,-67,-75,-79,-84,-85,-86,-87,-91,-2,-36,-92,154,-61,-63,-66,-88,-74,-78,-90,-56,-50,-51,-65,-52,-89,-54,-55,]),'ASSIGN':([46,79,],[64,122,]),'NUMBER':([47,49,56,64,65,77,81,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,122,127,134,156,157,158,159,],[73,73,73,73,73,73,73,73,73,73,73,73,-68,-69,-70,-71,-72,-73,-76,-77,73,-80,-81,-82,-83,73,148,73,73,73,73,166,]),'STRING':([47,49,56,64,65,77,81,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,122,134,156,157,158,],[74,74,74,74,74,74,74,74,74,74,74,74,-68,-69,-70,-71,-72,-73,-76,-77,74,-80,-81,-82,-83,74,74,74,74,74,]),'TRUE':([47,49,56,64,65,77,81,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,122,134,156,157,158,],[75,75,75,75,75,75,75,75,75,75,75,75,-68,-69,-70,-71,-72,-73,-76,-77,75,-80,-81,-82,-83,75,75,75,75,75,]),'FALSE':([47,49,56,64,65,77,81,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,122,134,156,157,158,],[76,76,76,76,76,76,76,76,76,76,76,76,-68,-69,-70,-71,-72,-73,-76,-77,76,-80,-81,-82,-83,76,76,76,76,76,]),'TIPOVAR':([54,131,152,176,],[84,84,161,177,]),'TIPOSTRING':([54,131,],[85,85,]),'ARRAY':([54,131,],[86,86,]),'THEN':([66,67,68,69,70,71,72,73,74,75,76,78,133,136,137,139,140,141,142,143,155,169,],[102,-62,-64,-88,-67,-75,-79,-84,-85,-86,-87,-91,-92,-61,-63,-66,-88,-74,-78,-90,-65,-89,]),'OR':([66,67,68,69,70,71,72,73,74,75,76,78,80,88,97,101,121,133,136,137,138,139,140,141,142,143,144,153,155,163,164,165,169,],[103,-62,-64,-88,-67,-75,-79,-84,-85,-86,-87,-91,103,103,103,103,103,-92,-61,-63,103,-66,-88,-74,-78,-90,103,103,-65,103,103,103,-89,]),'DO':([67,68,69,70,71,72,73,74,75,76,78,80,133,136,137,139,140,141,142,143,155,164,165,169,],[-62,-64,-88,-67,-75,-79,-84,-85,-86,-87,-91,123,-92,-61,-63,-66,-88,-74,-78,-90,-65,170,171,-89,]),']':([67,68,69,70,71,72,73,74,75,76,78,88,133,136,137,138,139,140,141,142,143,155,163,166,169,],[-62,-64,-88,-67,-75,-79,-84,-85,-86,-87,-91,128,-92,-61,-63,155,-66,-88,-74,-78,-90,-65,169,172,-89,]),'TO':([67,68,69,70,71,72,73,74,75,76,78,133,136,137,139,140,141,142,143,144,155,169,],[-62,-64,-88,-67,-75,-79,-84,-85,-86,-87,-91,-92,-61,-63,-66,-88,-74,-78,-90,157,-65,-89,]),'DOWNTO':([67,68,69,70,71,72,73,74,75,76,78,133,136,137,139,140,141,142,143,144,155,169,],[-62,-64,-88,-67,-75,-79,-84,-85,-86,-87,-91,-92,-61,-63,-66,-88,-74,-78,-90,158,-65,-89,]),'AND':([67,68,69,70,71,72,73,74,75,76,78,133,136,137,139,140,141,142,143,155,169,],[104,-64,-88,-67,-75,-79,-84,-85,-86,-87,-91,-92,104,-63,-66,-88,-74,-78,-90,-65,-89,]),'*':([69,71,72,73,74,75,76,78,133,140,141,142,143,155,169,],[-88,117,-79,-84,-85,-86,-87,-91,-92,-88,117,-78,-90,-89,-89,]),'/':([69,71,72,73,74,75,76,78,133,140,141,142,143,155,169,],[-88,118,-79,-84,-85,-86,-87,-91,-92,-88,118,-78,-90,-89,-89,]),'DIV':([69,71,72,73,74,75,76,78,133,140,141,142,143,155,169,],[-88,119,-79,-84,-85,-86,-87,-91,-92,-88,119,-78,-90,-89,-89,]),'MOD':([69,71,72,73,74,75,76,78,133,140,141,142,143,155,169,],[-88,120,-79,-84,-85,-86,-87,-91,-92,-88,120,-78,-90,-89,-89,]),'EQ':([69,70,71,72,73,74,75,76,78,133,140,141,142,143,155,169,],[-88,108,-75,-79,-84,-85,-86,-87,-91,-92,-88,-74,-78,-90,-89,-89,]),'NEQ':([69,70,71,72,73,74,75,76,78,133,140,141,142,143,155,169,],[-88,109,-75,-79,-84,-85,-86,-87,-91,-92,-88,-74,-78,-90,-89,-89,]),'LT':([69,70,71,72,73,74,75,76,78,133,140,141,142,143,155,169,],[-88,110,-75,-79,-84,-85,-86,-87,-91,-92,-88,-74,-78,-90,-89,-89,]),'LE':([69,70,71,72,73,74,75,76,78,133,140,141,142,143,155,169,],[-88,111,-75,-79,-84,-85,-86,-87,-91,-92,-88,-74,-78,-90,-89,-89,]),'GT':([69,70,71,72,73,74,75,76,78,133,140,141,142,143,155,169,],[-88,112,-75,-79,-84,-85,-86,-87,-91,-92,-88,-74,-78,-90,-89,-89,]),'GE':([69,70,71,72,73,74,75,76,78,133,140,141,142,143,155,169,],[-88,113,-75,-79,-84,-85,-86,-87,-91,-92,-88,-74,-78,-90,-89,-89,]),'+':([69,70,71,72,73,74,75,76,78,133,139,140,141,142,143,155,169,],[-88,114,-75,-79,-84,-85,-86,-87,-91,-92,114,-88,-74,-78,-90,-89,-89,]),'-':([69,70,71,72,73,74,75,76,78,133,139,140,141,142,143,155,169,],[-88,115,-75,-79,-84,-85,-86,-87,-91,-92,115,-88,-74,-78,-90,-89,-89,]),'DOTDOT':([148,],[159,]),'OF':([172,],[176,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'declaracoes':([4,],[5,]),'declaracoes_variaveis':([4,7,18,19,149,],[6,21,35,21,21,]),'declaracoes_subprogramas':([4,6,],[7,19,]),'empty':([4,7,19,57,58,65,149,],[8,22,22,91,91,100,22,]),'lista_subprogramas':([4,6,],[10,10,]),'subprograma':([4,6,10,],[11,11,28,]),'funcao':([4,6,10,],[12,12,12,]),'procedimento':([4,6,10,],[13,13,13,]),'funcao_header':([4,6,10,],[14,14,14,]),'bloco_simples':([5,14,160,],[17,29,167,]),'declaracoes_variaveis_opt':([7,19,149,],[20,52,160,]),'lista_decl':([9,],[23,]),'decl':([9,23,],[24,53,]),'lista_ids':([9,23,57,58,82,130,],[25,25,93,93,125,93,]),'identificador':([9,23,55,57,58,82,130,],[26,26,87,26,26,26,26,]),'comandos':([18,33,35,],[34,59,62,]),'comando_semi':([18,33,34,35,59,62,],[36,36,61,36,61,61,]),'comando':([18,33,34,35,59,62,102,123,154,170,171,],[37,37,37,37,37,37,135,145,162,174,175,]),'atribuicao':([18,33,34,35,59,62,102,123,154,170,171,],[38,38,38,38,38,38,38,38,38,38,38,]),'comando_if':([18,33,34,35,59,62,102,123,154,170,171,],[39,39,39,39,39,39,39,39,39,39,39,]),'comando_for':([18,33,34,35,59,62,102,123,154,170,171,],[40,40,40,40,40,40,40,40,40,40,40,]),'comando_while':([18,33,34,35,59,62,102,123,154,170,171,],[41,41,41,41,41,41,41,41,41,41,41,]),'comando_composto':([18,33,34,35,59,62,102,123,154,170,171,],[42,42,42,42,42,42,42,42,42,42,42,]),'comando_write':([18,33,34,35,59,62,102,123,154,170,171,],[43,43,43,43,43,43,43,43,43,43,43,]),'comando_read':([18,33,34,35,59,62,102,123,154,170,171,],[44,44,44,44,44,44,44,44,44,44,44,]),'chamada_funcao':([18,33,34,35,47,49,56,59,62,64,65,77,81,102,103,104,105,106,107,116,122,123,134,154,156,157,158,170,171,],[45,45,45,45,78,78,78,45,45,78,78,78,78,45,78,78,78,78,78,78,78,45,78,45,78,78,78,45,45,]),'expressao':([47,49,56,64,65,77,81,105,122,134,156,157,158,],[66,80,88,97,101,121,101,138,144,153,163,164,165,]),'expressao1':([47,49,56,64,65,77,81,103,105,122,134,156,157,158,],[67,67,67,67,67,67,67,136,67,67,67,67,67,67,]),'expressao2':([47,49,56,64,65,77,81,103,104,105,122,134,156,157,158,],[68,68,68,68,68,68,68,68,137,68,68,68,68,68,68,]),'expressao3':([47,49,56,64,65,77,81,103,104,105,106,122,134,156,157,158,],[70,70,70,70,70,70,70,70,70,70,139,70,70,70,70,70,]),'termo':([47,49,56,64,65,77,81,103,104,105,106,107,122,134,156,157,158,],[71,71,71,71,71,71,71,71,71,71,71,141,71,71,71,71,71,]),'fator':([47,49,56,64,65,77,81,103,104,105,106,107,116,122,134,156,157,158,],[72,72,72,72,72,72,72,72,72,72,72,72,142,72,72,72,72,72,]),'tipo':([54,131,],[83,151,]),'parametros':([57,58,],[89,94,]),'lista_param':([57,58,],[90,90,]),'param':([57,58,130,],[92,92,150,]),'argumentos':([65,],[98,]),'lista_exp':([65,81,],[99,124,]),'relop':([70,],[106,]),'addop':([70,139,],[107,107,]),'mulop':([71,141,],[116,116,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM ID ; declaracoes bloco_simples .','programa',6,'p_programa','pascal_parser.py',43),
  ('comando_composto -> BEGIN comandos END','comando_composto',3,'p_comando_composto','pascal_parser.py',61),
  ('comandos -> comandos comando_semi','comandos',2,'p_comandos','pascal_parser.py',65),
  ('comandos -> comando_semi','comandos',1,'p_comandos','pascal_parser.py',66),
  ('comando_semi -> comando ;','comando_semi',2,'p_comando_semi','pascal_parser.py',73),
  ('comando_semi -> comando','comando_semi',1,'p_comando_semi','pascal_parser.py',74),
  ('bloco_simples -> BEGIN comandos END','bloco_simples',3,'p_bloco_simples','pascal_parser.py',78),
  ('bloco_simples -> BEGIN declaracoes_variaveis comandos END','bloco_simples',4,'p_bloco_simples','pascal_parser.py',79),
  ('declaracoes -> declaracoes_variaveis declaracoes_subprogramas declaracoes_variaveis_opt','declaracoes',3,'p_declaracoes','pascal_parser.py',86),
  ('declaracoes -> declaracoes_subprogramas declaracoes_variaveis_opt','declaracoes',2,'p_declaracoes','pascal_parser.py',87),
  ('declaracoes -> declaracoes_variaveis declaracoes_subprogramas','declaracoes',2,'p_declaracoes','pascal_parser.py',88),
  ('declaracoes -> declaracoes_variaveis','declaracoes',1,'p_declaracoes','pascal_parser.py',89),
  ('declaracoes -> declaracoes_subprogramas','declaracoes',1,'p_declaracoes','pascal_parser.py',90),
  ('declaracoes -> empty','declaracoes',1,'p_declaracoes','pascal_parser.py',91),
  ('declaracoes_variaveis_opt -> declaracoes_variaveis','declaracoes_variaveis_opt',1,'p_declaracoes_variaveis_opt','pascal_parser.py',128),
  ('declaracoes_variaveis_opt -> empty','declaracoes_variaveis_opt',1,'p_declaracoes_variaveis_opt','pascal_parser.py',129),
  ('declaracoes_variaveis -> VAR lista_decl','declaracoes_variaveis',2,'p_declaracoes_variaveis','pascal_parser.py',133),
  ('lista_decl -> lista_decl decl','lista_decl',2,'p_lista_decl','pascal_parser.py',137),
  ('lista_decl -> decl','lista_decl',1,'p_lista_decl','pascal_parser.py',138),
  ('decl -> lista_ids : tipo ;','decl',4,'p_decl','pascal_parser.py',145),
  ('tipo -> TIPOVAR','tipo',1,'p_tipo','pascal_parser.py',157),
  ('tipo -> TIPOSTRING','tipo',1,'p_tipo','pascal_parser.py',158),
  ('tipo -> ARRAY [ NUMBER DOTDOT NUMBER ] OF TIPOVAR','tipo',8,'p_tipo','pascal_parser.py',159),
  ('lista_ids -> identificador','lista_ids',1,'p_lista_ids','pascal_parser.py',163),
  ('lista_ids -> lista_ids , identificador','lista_ids',3,'p_lista_ids','pascal_parser.py',164),
  ('identificador -> ID','identificador',1,'p_identificador','pascal_parser.py',171),
  ('identificador -> ID [ expressao ]','identificador',4,'p_identificador','pascal_parser.py',172),
  ('declaracoes_subprogramas -> lista_subprogramas','declaracoes_subprogramas',1,'p_declaracoes_subprogramas','pascal_parser.py',179),
  ('lista_subprogramas -> lista_subprogramas subprograma','lista_subprogramas',2,'p_lista_subprogramas','pascal_parser.py',183),
  ('lista_subprogramas -> subprograma','lista_subprogramas',1,'p_lista_subprogramas','pascal_parser.py',184),
  ('subprograma -> funcao','subprograma',1,'p_subprograma','pascal_parser.py',191),
  ('subprograma -> procedimento','subprograma',1,'p_subprograma','pascal_parser.py',192),
  ('funcao_header -> FUNCTION ID ( parametros ) : TIPOVAR ;','funcao_header',8,'p_funcao_header','pascal_parser.py',196),
  ('funcao -> funcao_header bloco_simples','funcao',2,'p_funcao','pascal_parser.py',221),
  ('procedimento -> PROCEDURE ID ( parametros ) ; declaracoes_variaveis_opt bloco_simples ;','procedimento',9,'p_procedimento','pascal_parser.py',231),
  ('atribuicao -> ID ASSIGN expressao','atribuicao',3,'p_atribuicao','pascal_parser.py',241),
  ('parametros -> lista_param','parametros',1,'p_parametros','pascal_parser.py',253),
  ('parametros -> empty','parametros',1,'p_parametros','pascal_parser.py',254),
  ('lista_param -> lista_param ; param','lista_param',3,'p_lista_param','pascal_parser.py',258),
  ('lista_param -> param','lista_param',1,'p_lista_param','pascal_parser.py',259),
  ('param -> lista_ids : tipo','param',3,'p_param','pascal_parser.py',266),
  ('comando -> atribuicao','comando',1,'p_comando','pascal_parser.py',272),
  ('comando -> comando_if','comando',1,'p_comando','pascal_parser.py',273),
  ('comando -> comando_for','comando',1,'p_comando','pascal_parser.py',274),
  ('comando -> comando_while','comando',1,'p_comando','pascal_parser.py',275),
  ('comando -> comando_composto','comando',1,'p_comando','pascal_parser.py',276),
  ('comando -> comando_write','comando',1,'p_comando','pascal_parser.py',277),
  ('comando -> comando_read','comando',1,'p_comando','pascal_parser.py',278),
  ('comando -> chamada_funcao','comando',1,'p_comando','pascal_parser.py',279),
  ('comando_write -> WRITELN ( lista_exp )','comando_write',4,'p_comando_write','pascal_parser.py',283),
  ('comando_read -> READLN ( lista_ids )','comando_read',4,'p_comando_read','pascal_parser.py',287),
  ('comando_if -> IF expressao THEN comando ELSE comando','comando_if',6,'p_comando_if','pascal_parser.py',291),
  ('comando_if -> IF expressao THEN comando','comando_if',4,'p_comando_if','pascal_parser.py',292),
  ('comando_for -> FOR ID ASSIGN expressao TO expressao DO comando','comando_for',8,'p_comando_for','pascal_parser.py',299),
  ('comando_for -> FOR ID ASSIGN expressao DOWNTO expressao DO comando','comando_for',8,'p_comando_for','pascal_parser.py',300),
  ('comando_while -> WHILE expressao DO comando','comando_while',4,'p_comando_while','pascal_parser.py',307),
  ('lista_exp -> expressao','lista_exp',1,'p_lista_exp','pascal_parser.py',311),
  ('lista_exp -> lista_exp , expressao','lista_exp',3,'p_lista_exp','pascal_parser.py',312),
  ('argumentos -> lista_exp','argumentos',1,'p_argumentos','pascal_parser.py',319),
  ('argumentos -> empty','argumentos',1,'p_argumentos','pascal_parser.py',320),
  ('expressao -> expressao OR expressao1','expressao',3,'p_expressao','pascal_parser.py',327),
  ('expressao -> expressao1','expressao',1,'p_expressao','pascal_parser.py',328),
  ('expressao1 -> expressao1 AND expressao2','expressao1',3,'p_expressao1','pascal_parser.py',335),
  ('expressao1 -> expressao2','expressao1',1,'p_expressao1','pascal_parser.py',336),
  ('expressao2 -> ID [ expressao ]','expressao2',4,'p_expressao2_index','pascal_parser.py',343),
  ('expressao2 -> expressao3 relop expressao3','expressao2',3,'p_expressao2','pascal_parser.py',347),
  ('expressao2 -> expressao3','expressao2',1,'p_expressao2','pascal_parser.py',348),
  ('relop -> EQ','relop',1,'p_relop','pascal_parser.py',355),
  ('relop -> NEQ','relop',1,'p_relop','pascal_parser.py',356),
  ('relop -> LT','relop',1,'p_relop','pascal_parser.py',357),
  ('relop -> LE','relop',1,'p_relop','pascal_parser.py',358),
  ('relop -> GT','relop',1,'p_relop','pascal_parser.py',359),
  ('relop -> GE','relop',1,'p_relop','pascal_parser.py',360),
  ('expressao3 -> expressao3 addop termo','expressao3',3,'p_expressao3','pascal_parser.py',366),
  ('expressao3 -> termo','expressao3',1,'p_expressao3','pascal_parser.py',367),
  ('addop -> +','addop',1,'p_addop','pascal_parser.py',374),
  ('addop -> -','addop',1,'p_addop','pascal_parser.py',375),
  ('termo -> termo mulop fator','termo',3,'p_termo','pascal_parser.py',379),
  ('termo -> fator','termo',1,'p_termo','pascal_parser.py',380),
  ('mulop -> *','mulop',1,'p_mulop','pascal_parser.py',387),
  ('mulop -> /','mulop',1,'p_mulop','pascal_parser.py',388),
  ('mulop -> DIV','mulop',1,'p_mulop','pascal_parser.py',389),
  ('mulop -> MOD','mulop',1,'p_mulop','pascal_parser.py',390),
  ('fator -> NUMBER','fator',1,'p_fator','pascal_parser.py',394),
  ('fator -> STRING','fator',1,'p_fator','pascal_parser.py',395),
  ('fator -> TRUE','fator',1,'p_fator','pascal_parser.py',396),
  ('fator -> FALSE','fator',1,'p_fator','pascal_parser.py',397),
  ('fator -> ID','fator',1,'p_fator','pascal_parser.py',398),
  ('fator -> ID [ expressao ]','fator',4,'p_fator','pascal_parser.py',399),
  ('fator -> ( expressao )','fator',3,'p_fator','pascal_parser.py',400),
  ('fator -> chamada_funcao','fator',1,'p_fator','pascal_parser.py',401),
  ('chamada_funcao -> ID ( argumentos )','chamada_funcao',4,'p_chamada_funcao','pascal_parser.py',422),
  ('empty -> <empty>','empty',0,'p_empty','pascal_parser.py',444),
]
